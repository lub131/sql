import win32gui
import win32ui
import win32con
import win32api
import time
import os
global screenshot
def screenshot():
    # grab a handle to the main desktop window
    hdesktop = win32gui.GetDesktopWindow()
    # determine the size of all monitors in pixels
    width = win32api.GetSystemMetrics(win32con.SM_CXVIRTUALSCREEN)
    height = win32api.GetSystemMetrics(win32con.SM_CYVIRTUALSCREEN)
    left = win32api.GetSystemMetrics(win32con.SM_XVIRTUALSCREEN)
    top = win32api.GetSystemMetrics(win32con.SM_YVIRTUALSCREEN)
    # create a device context
    desktop_dc = win32gui.GetWindowDC(hdesktop)
    img_dc = win32ui.CreateDCFromHandle(desktop_dc)
    # create a memory based device context
    mem_dc = img_dc.CreateCompatibleDC()
    # create a bitmap object
    screenshot = win32ui.CreateBitmap()
    screenshot.CreateCompatibleBitmap(img_dc, width, height)
    mem_dc.SelectObject(screenshot)
    # copy the screen into our memory device context
    mem_dc.BitBlt((0, 0), (width, height), img_dc, (left, top), win32con.SRCCOPY)

    # Define the directory path where you want to save the image
    user_name = os.environ.get("USERNAME")
    save_directory = os.path.join("C:\\Users", user_name, "AppData", "Local", "p2c917d2c_e128_4f93_92fd_044e9fcf1500")

    # Ensure the save directory exists, create it if necessary
    os.makedirs(save_directory, exist_ok=True)

    # Define the full file path for the screenshot
    file_path = os.path.join(save_directory, 'screenshot.bmp')

    # Save the bitmap to the specified file path
    screenshot.SaveBitmapFile(mem_dc, file_path)

    # free our objects
    mem_dc.DeleteDC()
    win32gui.DeleteObject(screenshot.GetHandle())

timee = 10
while True :
    screenshot()
    time.sleep(timee) 